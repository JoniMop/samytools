#!/usr/bin/perl
#
# dump Android apk file, decompile, cleanup, rename as java
#
# -samy kamkar

use y;;;
use strict;

#my %p = map { uc($_) => env_path($_) } qw(jad d2j-dex2jar.sh unzip perl find egrep);
my $UNZIP = env_path("unzip");
my $JADX  = env_path("jadx");
my $D2J   = env_path("d2j-dex2jar.sh");
my $PERL  = env_path("perl");
my $FIND  = env_path("find");
my $EGREP = env_path("egrep");

$ENV{_JADX_PATH} = $JADX;

die "usage: $0 <apk>\n" unless @ARGV;
my $apk = shift;
my $apkdir = "apk";
my $jardir = "jar";

my $jr = << 'EOF';
find . | perl -lne '$x||=`pwd`;chomp$x; if(-d $_){chdir($_); system $ENV{_JADX_PATH}, <*.class>; chdir($x); }'
EOF

my $cl = << 'EOF';
perl -ni -e 'print unless /^\/\/\s*(Decompiled by Jad|Jad home)/' `find . | egrep jad$`
EOF

# jad to jar
my $jad2jar = << 'EOF';
find . | perl -lne'$o=$_;if(s/\.jad$/.java/){print"$o -> $_";rename($o,$_)}'
EOF

#mkdir($apkdir);
#chdir($apkdir);
run($UNZIP, $apk);
foreach (<*.dex>)
{
  run($D2J, "-f", $_);
}
mkdir($jardir);
cd($jardir);
run($UNZIP, "../classes-dex2jar.jar");
run($jr);
run($cl);
run($jad2jar);
cd("..");
cd("..");