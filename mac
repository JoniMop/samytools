#!/usr/bin/perl
#
# output local mac addresses (all by default)
#
# -samy kamkar
#
# usage: mac [ip | iface | 'gw']

use Socket;
use Data::Dumper;
use strict;

my %arp = map {
	my @s = split /[\s()]+/;
	$s[1] => cleanmac($s[3])
} `arp -na`;

my $eth = lc shift;

if (!$eth || $eth eq 'gateway' || $eth eq 'gw')
{
	foreach (`/usr/sbin/netstat -nr`)
	{
		if (/^default\s+(\S+)/)
		{
			if ($eth eq 'gw' || $eth eq 'gateway')
			{
				print "$arp{$1}\n";
				exit;
			}
			else
			{
				print "gateway: $arp{$1}\n";
				last;
			}
		}
	}
}
# ip to mac
elsif ($arp{$eth})
{
	print "$arp{$eth}\n";
	exit;
}
# host to mac?
else
{
	my $inet = inet_aton($eth);
	if ($inet)
	{
		my $addr = inet_ntoa($inet);
		if ($arp{$addr})
		{
			print "$arp{$addr}\n";
			exit;
		}
	}
}


my $card;
foreach (`/sbin/ifconfig -a`)
{
	if (/^(\w+):/)
	{
		$card = $1;
	}
	elsif (/ether (\S+)/)
	{
		my $mac = cleanmac($1);

		if ($eth && lc $card eq $eth)
		{
			print "$mac\n";
		}
		elsif (!$eth)
		{
			print "$card: $mac\n";
		}
	}
}

sub cleanmac
{
	my $mac = shift;
	$mac = lc($mac);
	$mac =~ s/(\w?)(\w)(:|$)/($1 || "0") . $2/eg;
	return $mac;
}